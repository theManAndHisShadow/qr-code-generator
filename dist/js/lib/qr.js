/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/ts/dev.ts":
/*!***********************!*\
  !*** ./src/ts/dev.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.loadDevParams = exports.getDefaultDevParams = exports.printDevInfo = void 0;\nvar json2html_1 = __webpack_require__(/*! ./libs/json2html-raw/json2html */ \"./src/ts/libs/json2html-raw/json2html.ts\");\nvar devModeCheckbox = document.querySelector('#dev__mode-checkbox input');\nvar devContainer = document.querySelector('#dev');\nvar devRenderParamsContainer = document.querySelector('#dev__render-params');\nvar devInfo = document.querySelector('#dev__info div');\n/**\n * Print dev info to HTML page.\n * @param qrCode data object\n */\nfunction printDevInfo(qrCode) {\n    if (devModeCheckbox.checked) {\n        var devData = {\n            correction: qrCode.data.correction,\n            streamLength: qrCode.data.stream.length,\n            version: qrCode.data.version,\n        };\n        var json = JSON.stringify(devData);\n        var rendered = (0, json2html_1.json2html)({\n            json: json,\n            theme: 'dracula',\n        });\n        var isInitialRender = devInfo.children.length == 0;\n        if (isInitialRender) {\n            devInfo.appendChild(rendered);\n        }\n        else {\n            devInfo.replaceChild(rendered, devInfo.children[0]);\n        }\n    }\n    else {\n        devInfo.innerHTML = \"\";\n    }\n}\nexports.printDevInfo = printDevInfo;\n/**\n * Returns default dev params object.\n * @returns object\n */\nfunction getDefaultDevParams() {\n    var defaultDevParams = {\n        // main property, state of dev mode\n        state: false,\n        queitRegion: true,\n        boundingRectCorners: true,\n        finderPatterns: true,\n        timingPatterns: true,\n        aligmentPatterns: true,\n        versionCodes: true,\n        correctionLevelAndMaskCodes: true,\n        encodedDataDirectionColumns: true,\n    };\n    return defaultDevParams;\n}\nexports.getDefaultDevParams = getDefaultDevParams;\n/**\n * Shows or hides dev block container and inner elements.\n * @param state state of dev mode\n */\nfunction toggleDevBlockContainer(state) {\n    if (state === false) {\n        devContainer.classList.add('non-active');\n        devInfo.parentElement.setAttribute('hidden', '');\n        devRenderParamsContainer.setAttribute('hidden', '');\n    }\n    else {\n        devContainer.classList.remove('non-active');\n        devInfo.parentElement.removeAttribute('hidden');\n        devRenderParamsContainer.removeAttribute('hidden');\n    }\n}\n/**\n * Renders all setting items states on HTML dev block.\n * @param paramsObject dev oarameters object\n */\nfunction renderSettingsStates(paramsObject) {\n    var signature = 'data-dev-param';\n    var keys = Object.keys(paramsObject);\n    toggleDevBlockContainer(paramsObject.state);\n    keys.forEach(function (key) {\n        // all dev params checkbopx marked by attr \"data-dev-param\"\n        // loop all and set checked state from localeStorage\n        var checkbox = document.querySelector(\"[\".concat(signature, \"=\\\"\").concat(key, \"\\\"]\"));\n        checkbox.checked = paramsObject[key];\n        // add event listener for all target checkboxes\n        checkbox.addEventListener('click', function () {\n            // save new state to localStorage\n            updateSettingsAtLocalStorage(key, checkbox.checked);\n            toggleDevBlockContainer(devModeCheckbox.checked);\n        });\n    });\n}\n/**\n * Updates dev param at local storage.\n * @param propertyName\n * @param value\n */\nfunction updateSettingsAtLocalStorage(propertyName, value) {\n    var devParams = JSON.parse(localStorage.getItem('devParams'));\n    devParams[propertyName] = value;\n    localStorage.setItem('devParams', JSON.stringify(devParams));\n}\n/**\n * Loads dev params object, renders it at HTML,\n * adds click ev listener at checkbox for dev param properties updating.\n * @returns dev param object.\n */\nfunction loadDevParams() {\n    if (!localStorage.getItem('devParams')) {\n        localStorage.setItem('devParams', JSON.stringify(getDefaultDevParams()));\n    }\n    var devParams = JSON.parse(localStorage.getItem('devParams'));\n    renderSettingsStates(devParams);\n    return devParams;\n}\nexports.loadDevParams = loadDevParams;\n\n\n//# sourceURL=webpack:///./src/ts/dev.ts?");

/***/ }),

/***/ "./src/ts/helper.ts":
/*!**************************!*\
  !*** ./src/ts/helper.ts ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.nestedArrayIndexOf = exports.sanitizeInput = exports.getAllArrayCombinations = exports.verticalFlatten = exports.decimalToBinary = void 0;\n/**\n * Converts decimal into to bynary.\n * @param number target\n * @param bit NB! bit size of result value\n * @returns\n */\nfunction decimalToBinary(number, bit) {\n    return number.toString(2).padStart(bit, \"0\");\n}\nexports.decimalToBinary = decimalToBinary;\n/**\n * Returns rotated rectangular matrix.\n * @param targetArray array to transpose\n * @returns\n */\nfunction rectangularTranspose(targetArray) {\n    // find max \n    var maxLen = __spreadArray([], targetArray, true).sort(function (a, b) { return b.length - a.length; })[0].length;\n    var result = Array.from({ length: maxLen }, function (item, i) { return targetArray.map(function (col) { return col[i]; }); });\n    return result;\n}\n/**\n * Returns flatted array by vertical direction.\n * @param array\n * @returns\n */\nfunction verticalFlatten(array) {\n    var flatted = [];\n    var transposed = rectangularTranspose(__spreadArray([], array, true));\n    flatted = transposed.flat(1).filter(function (item) { return item !== undefined && item.length > 0; });\n    return flatted;\n}\nexports.verticalFlatten = verticalFlatten;\n/**\n * Returns new array with all combinations from origin array items.\n * @param originArray\n * @returns\n */\nfunction getAllArrayCombinations(originArray) {\n    var n = originArray.length;\n    var combinationsArray = [];\n    for (var i = 0; i <= n; i++) {\n        for (var j = 0; j <= n; j++) {\n            if (originArray[i] && originArray[j])\n                combinationsArray.push([originArray[i], originArray[j]]);\n        }\n    }\n    return combinationsArray;\n}\nexports.getAllArrayCombinations = getAllArrayCombinations;\n/**\n * Removes all restricted symbols.\n * @param inputText\n * @param toUpperCase make all letter same (upper) case. Optional argument, by default true.\n * @returns sanitized string\n */\nfunction sanitizeInput(inputText, toUpperCase) {\n    if (toUpperCase === undefined)\n        toUpperCase = true;\n    var sanitized = inputText.replace(/([^a-zA-Z0-9$%*+-./:\\s]|\\,)+/g, '');\n    if (toUpperCase === true) {\n        var atUpperCase = void 0;\n        atUpperCase = sanitized.split('');\n        // unify all input data letter case\n        atUpperCase = atUpperCase.map(function (letter) {\n            return letter.toUpperCase();\n        });\n        sanitized = atUpperCase.join('');\n    }\n    return sanitized;\n}\nexports.sanitizeInput = sanitizeInput;\n/**\n * Returns index of nested arrray.\n * @param array parent array\n * @param target child array\n * @returns index\n */\nfunction nestedArrayIndexOf(array, target) {\n    var index = -1;\n    array.forEach(function (item, i) {\n        if (item[0] === target[0] && item[1] === target[1])\n            index = i;\n    });\n    return index;\n}\nexports.nestedArrayIndexOf = nestedArrayIndexOf;\n\n\n//# sourceURL=webpack:///./src/ts/helper.ts?");

/***/ }),

/***/ "./src/ts/libs/json2html-raw/helpers.ts":
/*!**********************************************!*\
  !*** ./src/ts/libs/json2html-raw/helpers.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.emulateEvent = exports.addMultipleEventHandlers = exports.isObject = exports.isArray = exports.isLink = void 0;\n/**\n * Checks if given string is a link.\n * @param target string to check\n * @returns\n */\nfunction isLink(target) {\n    return /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/.test(target);\n}\nexports.isLink = isLink;\n/**\n * Checks if value is Array.\n * @param value\n * @returns\n */\nfunction isArray(value) {\n    return value !== null && value.constructor.name === \"Array\";\n}\nexports.isArray = isArray;\n/**\n * Checks if value is Object.\n * @param value\n * @returns\n */\nfunction isObject(value) {\n    return value !== null && value.constructor.name === \"Object\";\n}\nexports.isObject = isObject;\n/**\n * Adds multiple event handlers\n * @param targets array of targets\n * @param evenType event type\n * @param callback callback function with access to event instance\n */\nfunction addMultipleEventHandlers(targets, evenType, callback) {\n    targets.forEach(function (target) {\n        target.addEventListener(evenType, function (event) {\n            callback(event);\n        });\n    });\n}\nexports.addMultipleEventHandlers = addMultipleEventHandlers;\n/**\n * Emulates event by eventType on target element.\n * @param target event target\n * @param evenType event trigger type, for example \"click\"\n */\nfunction emulateEvent(target, evenType) {\n    var evObj = document.createEvent('Events');\n    evObj.initEvent(evenType, true, false);\n    target.dispatchEvent(evObj);\n}\nexports.emulateEvent = emulateEvent;\n\n\n//# sourceURL=webpack:///./src/ts/libs/json2html-raw/helpers.ts?");

/***/ }),

/***/ "./src/ts/libs/json2html-raw/json2html.ts":
/*!************************************************!*\
  !*** ./src/ts/libs/json2html-raw/json2html.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.json2html = void 0;\nvar helpers_1 = __webpack_require__(/*! ./helpers */ \"./src/ts/libs/json2html-raw/helpers.ts\");\nvar themes_1 = __webpack_require__(/*! ./themes */ \"./src/ts/libs/json2html-raw/themes.ts\");\n/**\n * Checks given value type and returns CSS class name for it.\n * @param value\n * @returns CSS class name, for example: \"json2html-type__boolean\"\n */\nfunction getValueTypeClassName(value) {\n    var classNameSample = 'json2html-type__';\n    var type = value == null || value == \"undefined\" ? value : typeof value;\n    return classNameSample + type;\n}\n/**\n * Checks given value type and if is type \"string\" wraps value to double quotes.\n * @param value\n * @returns prepared value\n */\nfunction wrapValue(value) {\n    var isString = typeof value == 'string';\n    var isNull = value == null;\n    var wrapped = value;\n    if (isNull)\n        wrapped = \"\".concat(value);\n    if (isString)\n        wrapped = \"\\\"\".concat(value, \"\\\"\");\n    return wrapped;\n}\n/**\n * Renders pair, where key:value - value is primitive type value.\n * @param keyName\n * @param itemValue\n * @returns ready for other manipulations HTML Node.\n */\nfunction renderPrimitiveItem(params) {\n    var element = document.createElement('div');\n    element.classList.add('json2html-pair');\n    var propertyName = document.createElement('span');\n    propertyName.textContent = params.keyName + \": \";\n    propertyName.classList.add('json2html-key');\n    var value = document.createElement('span');\n    // if it`s a negative number - render \"minus sign\"\n    if (typeof params.itemValue === 'number' && params.itemValue < 0) {\n        var minusSign = document.createElement('span');\n        minusSign.classList.add('json2html-value__minus-sign');\n        minusSign.textContent = '-';\n        value.appendChild(minusSign);\n        value.innerHTML += (Math.abs(params.itemValue));\n    }\n    else {\n        value.textContent = wrapValue(params.itemValue);\n    }\n    // show browser tooltip at primitive key value on hover\n    if (params.showTypeOnHover === true) {\n        var tip = params.itemValue == null ? 'null' : typeof params.itemValue;\n        // special tooltip for links\n        if (params.highlightLinks === true && (0, helpers_1.isLink)(params.itemValue)) {\n            tip = 'string (clickable link)';\n        }\n        value.setAttribute('title', tip);\n    }\n    // insert link if highlightLinks is true and string is link\n    if (params.highlightLinks === true && (0, helpers_1.isLink)(params.itemValue)) {\n        var link = document.createElement('a');\n        if (params.openLinksInNewTab === true)\n            link.setAttribute('target', '_blank');\n        link.href = params.itemValue;\n        link.textContent = \"\\\"\".concat(params.itemValue, \"\\\"\");\n        value.textContent = '';\n        value.appendChild(link);\n    }\n    value.classList.add('json2html-value');\n    value.classList.add(getValueTypeClassName(params.itemValue));\n    element.appendChild(propertyName);\n    element.appendChild(value);\n    return element;\n}\n/**\n * Checks the presence of nested elements.\n * @param targetItem parent item to check\n * @returns\n */\nfunction hasNestedItems(targetItem) {\n    var result = false;\n    Object.values(targetItem).forEach(function (targetItem) {\n        if (targetItem !== null) {\n            if ((0, helpers_1.isObject)(targetItem) || (0, helpers_1.isArray)(targetItem))\n                result = true;\n        }\n    });\n    return result;\n}\n/**\n * Updates the text content of the collapse button.\n * @param spoiler target spoiler, that affects to collapse buttons text contents\n * @param collapseButton Target collapse button. An optional argument. If empty, the function will itself look for a button\n */\nfunction updateCollapseToggle(spoiler, collapseButton) {\n    var collapseButtonClassName = 'json2html-collapse-all-toggle';\n    collapseButton = collapseButton || spoiler.parentElement.querySelector(\".\".concat(collapseButtonClassName));\n    var toggleState = spoiler.className.split('--')[1];\n    var action = toggleState == \"uncollapsed\" ? \"collapse\" : \"uncollapse\";\n    if (collapseButton)\n        collapseButton.textContent = \"(\".concat(action, \" all)\");\n}\n/**\n * Renders collapse helper buttons near complex pairs.\n * @param params\n */\nfunction renderCollapseButtons(params) {\n    var collapseButtonClassName = 'json2html-collapse-all-toggle';\n    var isExist = params.renderIn.querySelector(\"\".concat(collapseButtonClassName));\n    var collapseAllNestedBtn = isExist || document.createElement('span');\n    if (!isExist)\n        collapseAllNestedBtn.className = collapseButtonClassName;\n    // initial button element update\n    updateCollapseToggle(params.targetSpoiler, collapseAllNestedBtn);\n    // on click emulate clicking at spoiler buttons c:\n    collapseAllNestedBtn.addEventListener('click', function (event) {\n        // get all spoilers button on that tree branch\n        var sploilers = params.renderIn.querySelectorAll('.' + params.targetSpoiler.className);\n        sploilers.forEach(function (spoiler) {\n            (0, helpers_1.emulateEvent)(spoiler, 'click');\n            updateCollapseToggle(spoiler);\n        });\n    });\n    // add once\n    if (!isExist)\n        params.renderIn.appendChild(collapseAllNestedBtn);\n}\n/**\n * Gruops array item onto groups segments using size arg.\n * @param array target array\n * @param size size of group\n * @returns\n */\nfunction groupBigArrayItems(array, size) {\n    var startPosition = 0;\n    var grouped = {};\n    var _loop_1 = function (i) {\n        var endPosition = i * size > array.length ? array.length : i * size;\n        var dynamicKeyName = \"[\".concat(startPosition, \" ... \").concat(endPosition - 1, \"]\");\n        var clone = array.slice(startPosition, endPosition);\n        var part = [];\n        clone.forEach(function (item, index) {\n            part[index + startPosition] = item;\n        });\n        if (startPosition !== endPosition)\n            grouped[dynamicKeyName] = part;\n        startPosition = i * size;\n    };\n    for (var i = 0; i <= Math.ceil(array.length / size); i++) {\n        _loop_1(i);\n    }\n    return grouped;\n}\n/**\n * Renders complex pair, where key:value - value is Object or Array.\n * @param keyName\n * @param itemValue\n * @returns ready for other manipulations HTML Node.\n */\nfunction renderComplexItem(params) {\n    var depth = params.depth + 1;\n    var values = Object.values(params.itemValue);\n    var useGrouping = values.length > params.groupBigArrayItemsBy;\n    var nestedObject = useGrouping ? groupBigArrayItems(values, params.groupBigArrayItemsBy) : params.itemValue;\n    var nestedObjectSize = Object.values(nestedObject).length;\n    var renderedNested = render({\n        depth: depth,\n        parsedJSON: nestedObject,\n        renderNestedLength: params.renderNestedLength,\n        highlightLinks: params.highlightLinks,\n        openLinksInNewTab: params.openLinksInNewTab,\n        collapseAll: params.collapseAll,\n        showLevel: params.showLevel,\n        showTypeOnHover: params.showTypeOnHover,\n        groupBigArrayItemsBy: params.groupBigArrayItemsBy,\n        isGroupItem: useGrouping,\n    });\n    renderedNested.classList.add('json2html-nested-value');\n    var nestedElement = document.createElement('div');\n    nestedElement.classList.add('json2html-complex-pair');\n    nestedElement.setAttribute('data-tree-level', \"\".concat(depth));\n    var spoilerBtn = document.createElement('span');\n    spoilerBtn.textContent = '▶';\n    // collapsin at start (or not)\n    if (params.collapseAll === true) {\n        spoilerBtn.classList.add('json2html-spoiler-toggle--collapsed');\n        renderedNested.setAttribute('hidden', '');\n    }\n    else {\n        if (depth <= params.showLevel) {\n            spoilerBtn.classList.add('json2html-spoiler-toggle--uncollapsed');\n        }\n        else {\n            spoilerBtn.classList.add('json2html-spoiler-toggle--collapsed');\n            renderedNested.setAttribute('hidden', '');\n        }\n    }\n    var parentPropertyName = document.createElement('span');\n    parentPropertyName.textContent = params.keyName + \": \";\n    parentPropertyName.classList.add('json2html-key');\n    var typeSignature = document.createElement('span');\n    typeSignature.textContent = params.itemValue.constructor.name;\n    if (nestedObjectSize > 0) {\n        // Adding multiple event handlers, \n        // clicking on an element from the array below should invoke callback\n        (0, helpers_1.addMultipleEventHandlers)([\n            spoilerBtn,\n            parentPropertyName,\n            typeSignature\n        ], 'click', function (event) {\n            var collapsed = 'json2html-spoiler-toggle--collapsed';\n            var uncollapsed = 'json2html-spoiler-toggle--uncollapsed';\n            // toggle nested object\n            if (spoilerBtn.classList.contains(collapsed)) {\n                spoilerBtn.classList.remove(collapsed);\n                spoilerBtn.classList.add(uncollapsed);\n                renderedNested.removeAttribute('hidden');\n            }\n            else {\n                spoilerBtn.classList.add(collapsed);\n                spoilerBtn.classList.remove(uncollapsed);\n                renderedNested.setAttribute('hidden', '');\n            }\n            ;\n            updateCollapseToggle(spoilerBtn);\n        });\n    }\n    var rawConstructorName = params.itemValue.constructor.name;\n    var rawConstructorName__firstLetter = rawConstructorName[0].toLowerCase();\n    var rawConstructorName__otherLetters = rawConstructorName.slice(1);\n    var constructorName = rawConstructorName__firstLetter + rawConstructorName__otherLetters;\n    // only for Array items\n    if (params.renderNestedLength === true) {\n        if ((0, helpers_1.isArray)(params.itemValue)) {\n            // if it is part of grouped array - as length use group size \n            // because there a bug that show incorrect common array size\n            var length_1 = params.itemValue.length;\n            if (params.isGroupItem) {\n                var firstIndex = Number(params.keyName.split(' ... ')[0].replace('[', ''));\n                var lastIndex = Number(params.keyName.split(' ... ')[1].replace(']', ''));\n                length_1 = lastIndex - firstIndex + 1;\n            }\n            // specify empty variant\n            var size = length_1 == 0 ? 'empty' : length_1;\n            // define item word\n            var word = size == \"empty\"\n                ? \"\" : size == 1\n                ? ' item' : \" items\";\n            typeSignature.textContent += \" (\".concat(size).concat(word, \")\");\n        }\n        else if ((0, helpers_1.isObject)(params.itemValue) && Object.keys(params.itemValue).length === 0) {\n            typeSignature.textContent += \" (empty)\";\n        }\n    }\n    typeSignature.classList.add('json2html-type__' + constructorName);\n    if (Object.values(nestedObject).length > 0)\n        nestedElement.appendChild(spoilerBtn);\n    nestedElement.appendChild(parentPropertyName);\n    nestedElement.appendChild(typeSignature);\n    // if item contains nested object \n    // render special button \"collapse all\" \n    // only complex values that can be collapsed \n    // cause primitive values conatins simple structures\n    if (Object.values(nestedObject).length > 0 && hasNestedItems(nestedObject)) {\n        renderCollapseButtons({\n            targetSpoiler: spoilerBtn,\n            renderIn: nestedElement,\n            collapsed: params.collapseAll,\n            nestedObject: nestedObject,\n        });\n    }\n    if (Object.values(nestedObject).length > 0)\n        nestedElement.appendChild(renderedNested);\n    return nestedElement;\n}\n/**\n * Renders entire object tree into HTML tags and nodes.\n * @param parsedJSON regular object, parsed JSON object\n * @returns fully ready HTMLDivElement\n */\nfunction render(params) {\n    var keys = Object.keys(params.parsedJSON);\n    // rendered child nodes\n    var siblings = [];\n    // result node\n    var rendered = document.createElement('div');\n    rendered.classList.add('json2html-container');\n    // render per key\n    keys.forEach(function (key) {\n        // if key has complex value - use renderComplexItem()\n        if ((0, helpers_1.isArray)(params.parsedJSON[key]) || (0, helpers_1.isObject)(params.parsedJSON[key])) {\n            var nestedElement = renderComplexItem({\n                depth: params.depth,\n                keyName: key,\n                itemValue: params.parsedJSON[key],\n                renderNestedLength: params.renderNestedLength,\n                highlightLinks: params.highlightLinks,\n                openLinksInNewTab: params.openLinksInNewTab,\n                collapseAll: params.collapseAll,\n                showLevel: params.showLevel,\n                showTypeOnHover: params.showTypeOnHover,\n                groupBigArrayItemsBy: params.groupBigArrayItemsBy,\n                isGroupItem: params.isGroupItem,\n            });\n            siblings.push(nestedElement);\n            // if key has primitive value - use renderPrimitiveItem()\n        }\n        else {\n            var element = renderPrimitiveItem({\n                keyName: key,\n                itemValue: params.parsedJSON[key],\n                highlightLinks: params.highlightLinks,\n                openLinksInNewTab: params.openLinksInNewTab,\n                showTypeOnHover: params.showTypeOnHover,\n            });\n            siblings.push(element);\n        }\n    });\n    // make tree\n    siblings.forEach(function (node) {\n        rendered.appendChild(node);\n    });\n    return rendered;\n}\n/**\n * Renders JSON string in colored and formatted HTML block.\n * @param params.json JSON string to render\n * @param params.rootName Name of root rendered object key. By default 'json'.\n * @param params.renderNestedLength Allows render Array length in Array type signature. By default - true.\n * @param params.highlightLinks Allows render url string as <a> clickable tag. By default - true.\n * @param params.openLinksInNewTab On true value - opens links at new browser tab. By default - true.\n * @param params.collapseAll On true value - renders HTML block at start with minimized (collapsed) content. By default - true.\n * @param params.showLevel Collapse all levels except given level value.\n * This option ignoring if params.collapseAll is true! By default - 1.\n * @param params.showTypeOnHover On true value - show default html \"title\" tooltip on primitive values with their type. By default - true.\n * @param params.theme Renders HTML block with given theme. By default uses \"dracula\" theme.\n * Supports 9 themes: andromeda, daylight, dracula, gruvbox-dark, gruvbox-light, github-light, github-dark, horizon, monokai.\n * Also supports user themes. For more info check project`s github mini wiki.\n * @param params.onError error handler callback function, gives access to Error instance.\n * @param params.groupBigArrayItemsBy Size of group in big array. By default - 100. Minimum value - 25\n * That means if array length > 100 - array will be grouped onto 'n' groups by 100 items.\n * @returns\n */\nfunction json2html(params) {\n    var _a;\n    // default values\n    params.rootName = params.rootName || 'json';\n    params.renderNestedLength = params.renderNestedLength == false ? false : true;\n    params.highlightLinks = params.highlightLinks == false ? false : true;\n    params.openLinksInNewTab = params.openLinksInNewTab == false ? false : true;\n    params.collapseAll = params.collapseAll == true ? true : false;\n    params.showLevel = params.showLevel || 1;\n    params.showTypeOnHover = params.showTypeOnHover == false ? false : true;\n    params.theme = params.theme || 'andromeda';\n    params.groupBigArrayItemsBy = params.groupBigArrayItemsBy <= 25 ? 25 : params.groupBigArrayItemsBy || 100;\n    // update json2html theme at start\n    (0, themes_1.updateTheme)(params.theme);\n    // Wrapping JSON.parse call in trycatch\n    try {\n        var parsed = JSON.parse(params.json);\n        var rendered = render({\n            depth: 0,\n            parsedJSON: (_a = {}, _a[params.rootName] = parsed, _a),\n            renderNestedLength: params.renderNestedLength,\n            highlightLinks: params.highlightLinks,\n            openLinksInNewTab: params.openLinksInNewTab,\n            collapseAll: params.collapseAll,\n            showLevel: params.showLevel,\n            showTypeOnHover: params.showTypeOnHover,\n            groupBigArrayItemsBy: params.groupBigArrayItemsBy,\n            isGroupItem: false,\n        });\n        return rendered;\n    }\n    catch (error) {\n        // Invoking params.onError for error handling \n        params.onError(error);\n    }\n}\nexports.json2html = json2html;\n\n\n//# sourceURL=webpack:///./src/ts/libs/json2html-raw/json2html.ts?");

/***/ }),

/***/ "./src/ts/libs/json2html-raw/themes.ts":
/*!*********************************************!*\
  !*** ./src/ts/libs/json2html-raw/themes.ts ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.updateTheme = exports.updateThemeCSS = exports.generateCSSCode = void 0;\n/**\n * Returns theme css properties object.\n * @param themeName name of theme\n * @returns CSS props object {selector: string, props: {cssProp:value}}\n */\nfunction getThemeProperies(themeName) {\n    var themes = {\n        andromeda: {\n            container: {\n                selector: '.json2html-container',\n                properties: {\n                    background: '#23262E',\n                },\n            },\n            spoilerToggle: {\n                selector: \".json2html-spoiler-toggle--collapsed, .json2html-spoiler-toggle--uncollapsed\",\n                properties: {\n                    color: '#9c967a',\n                },\n            },\n            key: {\n                selector: '.json2html-key',\n                properties: {\n                    color: '#00e8c6',\n                },\n            },\n            valueTypeBoolean: {\n                selector: '.json2html-type__boolean',\n                properties: {\n                    color: '#ee5d43',\n                },\n            },\n            valueMinusSign: {\n                selector: '.json2html-value__minus-sign',\n                properties: {\n                    color: '#ee5d43',\n                },\n            },\n            valueTypeNumber: {\n                selector: '.json2html-type__number',\n                properties: {\n                    color: '#f39c12',\n                },\n            },\n            valueTypeString: {\n                selector: '.json2html-type__string',\n                properties: {\n                    color: '#96E072',\n                },\n            },\n            valueTypeStringLink: {\n                selector: '.json2html-type__string a, .json2html-type__string a:visited',\n                properties: {\n                    color: '#3B79C7',\n                },\n            },\n            valueTypeNull: {\n                selector: '.json2html-type__null',\n                properties: {\n                    color: '#4e4f54',\n                },\n            },\n            valueTypeUndefined: {\n                selector: '.json2html-type__undefined',\n                properties: {\n                    color: '#f92672',\n                },\n            },\n            valueComplexItemSignature: {\n                selector: '.json2html-type__array, .json2html-type__object',\n                properties: {\n                    color: \"#646b7c\",\n                },\n            },\n            collapseAllToggle: {\n                selector: '.json2html-collapse-all-toggle',\n                properties: {\n                    color: '#8490a8',\n                },\n            },\n        },\n        daylight: {\n            container: {\n                selector: '.json2html-container',\n                properties: {\n                    background: 'white',\n                },\n            },\n            spoilerToggle: {\n                selector: \".json2html-spoiler-toggle--collapsed, .json2html-spoiler-toggle--uncollapsed\",\n                properties: {\n                    color: '#585858',\n                },\n            },\n            key: {\n                selector: '.json2html-key',\n                properties: {\n                    color: 'blue',\n                },\n            },\n            valueTypeBoolean: {\n                selector: '.json2html-type__boolean',\n                properties: {\n                    color: 'blueviolet',\n                },\n            },\n            valueMinusSign: {\n                selector: '.json2html-value__minus-sign',\n                properties: {\n                    color: '#b44343',\n                },\n            },\n            valueTypeNumber: {\n                selector: '.json2html-type__number',\n                properties: {\n                    color: '#1e7fcc',\n                },\n            },\n            valueTypeString: {\n                selector: '.json2html-type__string',\n                properties: {\n                    color: '#4caf50',\n                },\n            },\n            valueTypeStringLink: {\n                selector: '.json2html-type__string a, .json2html-type__string a:visited',\n                properties: {\n                    color: '#4caf50',\n                },\n            },\n            valueTypeNull: {\n                selector: '.json2html-type__null',\n                properties: {\n                    color: '#9b9b9b',\n                },\n            },\n            valueTypeUndefined: {\n                selector: '.json2html-type__undefined',\n                properties: {\n                    color: '#795548',\n                },\n            },\n            valueComplexItemSignature: {\n                selector: '.json2html-type__array, .json2html-type__object',\n                properties: {\n                    color: \"#646b7c\",\n                },\n            },\n            collapseAllToggle: {\n                selector: '.json2html-collapse-all-toggle',\n                properties: {\n                    color: '#000000',\n                },\n            },\n        },\n        dracula: {\n            container: {\n                selector: '.json2html-container',\n                properties: {\n                    background: '#282a36',\n                },\n            },\n            spoilerToggle: {\n                selector: \".json2html-spoiler-toggle--collapsed, .json2html-spoiler-toggle--uncollapsed\",\n                properties: {\n                    color: '#ffffff',\n                },\n            },\n            key: {\n                selector: '.json2html-key',\n                properties: {\n                    color: '#8be9fd',\n                },\n            },\n            valueTypeBoolean: {\n                selector: '.json2html-type__boolean',\n                properties: {\n                    color: '#bd93f9',\n                },\n            },\n            valueMinusSign: {\n                selector: '.json2html-value__minus-sign',\n                properties: {\n                    color: '#ff79c6',\n                },\n            },\n            valueTypeNumber: {\n                selector: '.json2html-type__number',\n                properties: {\n                    color: '#bd93f9',\n                },\n            },\n            valueTypeString: {\n                selector: '.json2html-type__string',\n                properties: {\n                    color: '#f1fa8c',\n                },\n            },\n            valueTypeStringLink: {\n                selector: '.json2html-type__string a, .json2html-type__string a:visited',\n                properties: {\n                    color: '#ff79c6',\n                },\n            },\n            valueTypeNull: {\n                selector: '.json2html-type__null',\n                properties: {\n                    color: '#6272a4',\n                },\n            },\n            valueTypeUndefined: {\n                selector: '.json2html-type__undefined',\n                properties: {\n                    color: '#ffb86c',\n                },\n            },\n            valueComplexItemSignature: {\n                selector: '.json2html-type__array, .json2html-type__object',\n                properties: {\n                    color: \"#f8f8f2\",\n                },\n            },\n            collapseAllToggle: {\n                selector: '.json2html-collapse-all-toggle',\n                properties: {\n                    color: 'white',\n                },\n            },\n        },\n        'github-dark': {\n            container: {\n                selector: '.json2html-container',\n                properties: {\n                    background: '#0d1117',\n                },\n            },\n            spoilerToggle: {\n                selector: \".json2html-spoiler-toggle--collapsed, .json2html-spoiler-toggle--uncollapsed\",\n                properties: {\n                    color: '#afafaf',\n                },\n            },\n            key: {\n                selector: '.json2html-key',\n                properties: {\n                    color: '#c9d1d9',\n                },\n            },\n            valueTypeBoolean: {\n                selector: '.json2html-type__boolean',\n                properties: {\n                    color: '#b392f0',\n                },\n            },\n            valueMinusSign: {\n                selector: '.json2html-value__minus-sign',\n                properties: {\n                    color: '#ff79c6',\n                },\n            },\n            valueTypeNumber: {\n                selector: '.json2html-type__number',\n                properties: {\n                    color: '#9ecbff',\n                },\n            },\n            valueTypeString: {\n                selector: '.json2html-type__string',\n                properties: {\n                    color: '#9ecbff',\n                },\n            },\n            valueTypeStringLink: {\n                selector: '.json2html-type__string a, .json2html-type__string a:visited',\n                properties: {\n                    color: '#9ecbff',\n                },\n            },\n            valueTypeNull: {\n                selector: '.json2html-type__null',\n                properties: {\n                    color: '#6a737d',\n                },\n            },\n            valueTypeUndefined: {\n                selector: '.json2html-type__undefined',\n                properties: {\n                    color: '#9ecbff',\n                },\n            },\n            valueComplexItemSignature: {\n                selector: '.json2html-type__array, .json2html-type__object',\n                properties: {\n                    color: \"#9ecbff\",\n                },\n            },\n            collapseAllToggle: {\n                selector: '.json2html-collapse-all-toggle',\n                properties: {\n                    color: '#6a737d',\n                },\n            },\n        },\n        'github-light': {\n            container: {\n                selector: '.json2html-container',\n                properties: {\n                    background: '#ffffff',\n                },\n            },\n            spoilerToggle: {\n                selector: \".json2html-spoiler-toggle--collapsed, .json2html-spoiler-toggle--uncollapsed\",\n                properties: {\n                    color: '#afafaf',\n                },\n            },\n            key: {\n                selector: '.json2html-key',\n                properties: {\n                    color: '#25292f',\n                },\n            },\n            valueTypeBoolean: {\n                selector: '.json2html-type__boolean',\n                properties: {\n                    color: '#6f42c1',\n                },\n            },\n            valueMinusSign: {\n                selector: '.json2html-value__minus-sign',\n                properties: {\n                    color: '#25292f',\n                },\n            },\n            valueTypeNumber: {\n                selector: '.json2html-type__number',\n                properties: {\n                    color: '#005cc5',\n                },\n            },\n            valueTypeString: {\n                selector: '.json2html-type__string',\n                properties: {\n                    color: '#0a3069',\n                },\n            },\n            valueTypeStringLink: {\n                selector: '.json2html-type__string a, .json2html-type__string a:visited',\n                properties: {\n                    color: '#0a3069',\n                },\n            },\n            valueTypeNull: {\n                selector: '.json2html-type__null',\n                properties: {\n                    color: '#6a737d',\n                },\n            },\n            valueTypeUndefined: {\n                selector: '.json2html-type__undefined',\n                properties: {\n                    color: '#005cc5',\n                },\n            },\n            valueComplexItemSignature: {\n                selector: '.json2html-type__array, .json2html-type__object',\n                properties: {\n                    color: \"#005cc5\",\n                },\n            },\n            collapseAllToggle: {\n                selector: '.json2html-collapse-all-toggle',\n                properties: {\n                    color: '#6a737d',\n                },\n            },\n        },\n        'gruvbox-dark': {\n            container: {\n                selector: '.json2html-container',\n                properties: {\n                    background: '#282828',\n                },\n            },\n            spoilerToggle: {\n                selector: \".json2html-spoiler-toggle--collapsed, .json2html-spoiler-toggle--uncollapsed\",\n                properties: {\n                    color: '#585858',\n                },\n            },\n            key: {\n                selector: '.json2html-key',\n                properties: {\n                    color: '#98971A',\n                },\n            },\n            valueTypeBoolean: {\n                selector: '.json2html-type__boolean',\n                properties: {\n                    color: '#B16286',\n                },\n            },\n            valueMinusSign: {\n                selector: '.json2html-value__minus-sign',\n                properties: {\n                    color: '#8ec07c',\n                },\n            },\n            valueTypeNumber: {\n                selector: '.json2html-type__number',\n                properties: {\n                    color: '#B16286',\n                },\n            },\n            valueTypeString: {\n                selector: '.json2html-type__string',\n                properties: {\n                    color: '#458588',\n                },\n            },\n            valueTypeStringLink: {\n                selector: '.json2html-type__string a, .json2html-type__string a:visited',\n                properties: {\n                    color: '#689D6A',\n                },\n            },\n            valueTypeNull: {\n                selector: '.json2html-type__null',\n                properties: {\n                    color: '#504945',\n                },\n            },\n            valueTypeUndefined: {\n                selector: '.json2html-type__undefined',\n                properties: {\n                    color: '#CC241D',\n                },\n            },\n            valueComplexItemSignature: {\n                selector: '.json2html-type__array, .json2html-type__object',\n                properties: {\n                    color: \"#A89984\",\n                },\n            },\n            collapseAllToggle: {\n                selector: '.json2html-collapse-all-toggle',\n                properties: {\n                    color: '#6a737d',\n                },\n            },\n        },\n        'gruvbox-light': {\n            container: {\n                selector: '.json2html-container',\n                properties: {\n                    background: '#FBF1C7',\n                },\n            },\n            spoilerToggle: {\n                selector: \".json2html-spoiler-toggle--collapsed, .json2html-spoiler-toggle--uncollapsed\",\n                properties: {\n                    color: '#9c967a',\n                },\n            },\n            key: {\n                selector: '.json2html-key',\n                properties: {\n                    color: '#98971A',\n                },\n            },\n            valueTypeBoolean: {\n                selector: '.json2html-type__boolean',\n                properties: {\n                    color: '#B16286',\n                },\n            },\n            valueMinusSign: {\n                selector: '.json2html-value__minus-sign',\n                properties: {\n                    color: '#CC241D',\n                },\n            },\n            valueTypeNumber: {\n                selector: '.json2html-type__number',\n                properties: {\n                    color: '#B16286',\n                },\n            },\n            valueTypeString: {\n                selector: '.json2html-type__string',\n                properties: {\n                    color: '#458588',\n                },\n            },\n            valueTypeStringLink: {\n                selector: '.json2html-type__string a, .json2html-type__string a:visited',\n                properties: {\n                    color: '#689D6A',\n                },\n            },\n            valueTypeNull: {\n                selector: '.json2html-type__null',\n                properties: {\n                    color: '#BDAE93',\n                },\n            },\n            valueTypeUndefined: {\n                selector: '.json2html-type__undefined',\n                properties: {\n                    color: '#CC241D',\n                },\n            },\n            valueComplexItemSignature: {\n                selector: '.json2html-type__array, .json2html-type__object',\n                properties: {\n                    color: \"#7C6F64\",\n                },\n            },\n            collapseAllToggle: {\n                selector: '.json2html-collapse-all-toggle',\n                properties: {\n                    color: '#7C6F64',\n                },\n            },\n        },\n        horizon: {\n            container: {\n                selector: '.json2html-container',\n                properties: {\n                    background: '#fffbf7',\n                },\n            },\n            spoilerToggle: {\n                selector: \".json2html-spoiler-toggle--collapsed, .json2html-spoiler-toggle--uncollapsed\",\n                properties: {\n                    color: '#585858',\n                },\n            },\n            key: {\n                selector: '.json2html-key',\n                properties: {\n                    color: '#da103f',\n                },\n            },\n            valueTypeBoolean: {\n                selector: '.json2html-type__boolean',\n                properties: {\n                    color: '#8a31b9',\n                },\n            },\n            valueMinusSign: {\n                selector: '.json2html-value__minus-sign',\n                properties: {\n                    color: '#b44343',\n                },\n            },\n            valueTypeNumber: {\n                selector: '.json2html-type__number',\n                properties: {\n                    color: '#1766a5',\n                },\n            },\n            valueTypeString: {\n                selector: '.json2html-type__string',\n                properties: {\n                    color: '#f6661e',\n                },\n            },\n            valueTypeStringLink: {\n                selector: '.json2html-type__string a, .json2html-type__string a:visited',\n                properties: {\n                    color: '#c14e15',\n                },\n            },\n            valueTypeNull: {\n                selector: '.json2html-type__null',\n                properties: {\n                    color: '#9b9b9b',\n                },\n            },\n            valueTypeUndefined: {\n                selector: '.json2html-type__undefined',\n                properties: {\n                    color: '#3f51b5',\n                },\n            },\n            valueComplexItemSignature: {\n                selector: '.json2html-type__array, .json2html-type__object',\n                properties: {\n                    color: \"#846e64\",\n                },\n            },\n            collapseAllToggle: {\n                selector: '.json2html-collapse-all-toggle',\n                properties: {\n                    color: '#black',\n                },\n            },\n        },\n        monokai: {\n            container: {\n                selector: '.json2html-container',\n                properties: {\n                    background: '#272822',\n                },\n            },\n            spoilerToggle: {\n                selector: \".json2html-spoiler-toggle--collapsed, .json2html-spoiler-toggle--uncollapsed\",\n                properties: {\n                    color: '#585858',\n                },\n            },\n            key: {\n                selector: '.json2html-key',\n                properties: {\n                    color: '#F92672',\n                },\n            },\n            valueTypeBoolean: {\n                selector: '.json2html-type__boolean',\n                properties: {\n                    color: '#AE81FF',\n                },\n            },\n            valueMinusSign: {\n                selector: '.json2html-value__minus-sign',\n                properties: {\n                    color: '#f92672',\n                },\n            },\n            valueTypeNumber: {\n                selector: '.json2html-type__number',\n                properties: {\n                    color: '#AE81FF',\n                },\n            },\n            valueTypeString: {\n                selector: '.json2html-type__string',\n                properties: {\n                    color: '#E6DB74',\n                },\n            },\n            valueTypeStringLink: {\n                selector: '.json2html-type__string a, .json2html-type__string a:visited',\n                properties: {\n                    color: '#F8F8F2',\n                },\n            },\n            valueTypeNull: {\n                selector: '.json2html-type__null',\n                properties: {\n                    color: '#75715E',\n                },\n            },\n            valueTypeUndefined: {\n                selector: '.json2html-type__undefined',\n                properties: {\n                    color: '#FD971F',\n                },\n            },\n            valueComplexItemSignature: {\n                selector: '.json2html-type__array, .json2html-type__object',\n                properties: {\n                    color: \"#66D9EF\",\n                },\n            },\n            collapseAllToggle: {\n                selector: '.json2html-collapse-all-toggle',\n                properties: {\n                    color: 'white',\n                },\n            },\n        },\n    };\n    return themes[themeName];\n}\n/**\n * Return ready CSS code.\n * @param themeName name of theme\n * @returns\n */\nfunction generateCSSCode(themeObject) {\n    var cssCode = \"\\n/* generated by src/ts/lib/themes.ts generateCSSCode() function */\\n    \";\n    var elements = Object.keys(themeObject);\n    elements.forEach(function (element) {\n        var selector = themeObject[element].selector;\n        var properties = __spreadArray([], Object.keys(themeObject[element].properties), true).map(function (property) {\n            return \"\".concat(property, \": \").concat(themeObject[element].properties[property], \";\\n\");\n        })\n            .join('');\n        cssCode += \"\\n\".concat(selector, \" {\\n    \").concat(properties, \"}\\n\");\n    });\n    return cssCode;\n}\nexports.generateCSSCode = generateCSSCode;\n/**\n * Creates or updates json2html style node.\n * @param themeName name of theme\n */\nfunction updateThemeCSS(cssCode, dataMarker) {\n    // Checks if style tag already exists\n    var themeCSS = document.head.querySelector(dataMarker); //'[data-style-origin=\"json2html\"]'\n    // if exist\n    if (themeCSS) {\n        // just update\n        themeCSS.innerHTML = cssCode;\n    }\n    else {\n        // else create and insert style tag\n        var style = document.createElement('style');\n        var dataAttrName = dataMarker.split('=')[0].replace(/\\[+/gm, '');\n        var dataAttrvalue = dataMarker.split('=')[1].replace(/(\\]|\\\")+/gm, '');\n        style.type = 'text/css';\n        style.setAttribute(dataAttrName, dataAttrvalue);\n        style.innerHTML = cssCode;\n        document.head.appendChild(style);\n    }\n}\nexports.updateThemeCSS = updateThemeCSS;\n/**\n * Updates theme using name of theme string.\n * @param themeName name of theme\n */\nfunction updateTheme(themeName) {\n    var isUserTheme = /css\\/themes\\/[a-zA-Z\\-0-9]+\\.css/.test(themeName);\n    if (isUserTheme) {\n        var path = themeName;\n        var userThemeStyle = document.createElement('link');\n        userThemeStyle.href = path;\n        userThemeStyle.rel = 'stylesheet';\n        document.head.appendChild(userThemeStyle);\n    }\n    else {\n        var themeColors = getThemeProperies(themeName);\n        var cssCode = generateCSSCode(themeColors);\n        // for saving info about source\n        var dataMarker = '[data-style-origin=\"json2html\"]';\n        updateThemeCSS(cssCode, dataMarker);\n    }\n}\nexports.updateTheme = updateTheme;\n\n\n//# sourceURL=webpack:///./src/ts/libs/json2html-raw/themes.ts?");

/***/ }),

/***/ "./src/ts/qr-core/corrector.ts":
/*!*************************************!*\
  !*** ./src/ts/qr-core/corrector.ts ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.addCorrectionBytes = exports.calculateCorrectionBytes = exports.getCorrectionBytesAmount = exports.getPolynomials = void 0;\nvar helper_1 = __webpack_require__(/*! ../helper */ \"./src/ts/helper.ts\");\nfunction getGaloisFieldValue(value, reversed) {\n    reversed = reversed || false;\n    var data = {\n        \"0\": \"1\", \"1\": \"2\", \"2\": \"4\", \"3\": \"8\", \"4\": \"16\", \"5\": \"32\", \"6\": \"64\", \"7\": \"128\", \"8\": \"29\", \"9\": \"58\",\n        \"10\": \"116\", \"11\": \"232\", \"12\": \"205\", \"13\": \"135\", \"14\": \"19\", \"15\": \"38\", \"16\": \"76\", \"17\": \"152\", \"18\": \"45\", \"19\": \"90\",\n        \"20\": \"180\", \"21\": \"117\", \"22\": \"234\", \"23\": \"201\", \"24\": \"143\", \"25\": \"3\", \"26\": \"6\", \"27\": \"12\", \"28\": \"24\", \"29\": \"48\",\n        \"30\": \"96\", \"31\": \"192\", \"32\": \"157\", \"33\": \"39\", \"34\": \"78\", \"35\": \"156\", \"36\": \"37\", \"37\": \"74\", \"38\": \"148\", \"39\": \"53\",\n        \"40\": \"106\", \"41\": \"212\", \"42\": \"181\", \"43\": \"119\", \"44\": \"238\", \"45\": \"193\", \"46\": \"159\", \"47\": \"35\", \"48\": \"70\", \"49\": \"140\",\n        \"50\": \"5\", \"51\": \"10\", \"52\": \"20\", \"53\": \"40\", \"54\": \"80\", \"55\": \"160\", \"56\": \"93\", \"57\": \"186\", \"58\": \"105\", \"59\": \"210\",\n        \"60\": \"185\", \"61\": \"111\", \"62\": \"222\", \"63\": \"161\", \"64\": \"95\", \"65\": \"190\", \"66\": \"97\", \"67\": \"194\", \"68\": \"153\", \"69\": \"47\",\n        \"70\": \"94\", \"71\": \"188\", \"72\": \"101\", \"73\": \"202\", \"74\": \"137\", \"75\": \"15\", \"76\": \"30\", \"77\": \"60\", \"78\": \"120\", \"79\": \"240\",\n        \"80\": \"253\", \"81\": \"231\", \"82\": \"211\", \"83\": \"187\", \"84\": \"107\", \"85\": \"214\", \"86\": \"177\", \"87\": \"127\", \"88\": \"254\", \"89\": \"225\",\n        \"90\": \"223\", \"91\": \"163\", \"92\": \"91\", \"93\": \"182\", \"94\": \"113\", \"95\": \"226\", \"96\": \"217\", \"97\": \"175\", \"98\": \"67\", \"99\": \"134\",\n        \"100\": \"17\", \"101\": \"34\", \"102\": \"68\", \"103\": \"136\", \"104\": \"13\", \"105\": \"26\", \"106\": \"52\", \"107\": \"104\", \"108\": \"208\", \"109\": \"189\",\n        \"110\": \"103\", \"111\": \"206\", \"112\": \"129\", \"113\": \"31\", \"114\": \"62\", \"115\": \"124\", \"116\": \"248\", \"117\": \"237\", \"118\": \"199\", \"119\": \"147\",\n        \"120\": \"59\", \"121\": \"118\", \"122\": \"236\", \"123\": \"197\", \"124\": \"151\", \"125\": \"51\", \"126\": \"102\", \"127\": \"204\", \"128\": \"133\", \"129\": \"23\",\n        \"130\": \"46\", \"131\": \"92\", \"132\": \"184\", \"133\": \"109\", \"134\": \"218\", \"135\": \"169\", \"136\": \"79\", \"137\": \"158\", \"138\": \"33\", \"139\": \"66\",\n        \"140\": \"132\", \"141\": \"21\", \"142\": \"42\", \"143\": \"84\", \"144\": \"168\", \"145\": \"77\", \"146\": \"154\", \"147\": \"41\", \"148\": \"82\", \"149\": \"164\",\n        \"150\": \"85\", \"151\": \"170\", \"152\": \"73\", \"153\": \"146\", \"154\": \"57\", \"155\": \"114\", \"156\": \"228\", \"157\": \"213\", \"158\": \"183\", \"159\": \"115\",\n        \"160\": \"230\", \"161\": \"209\", \"162\": \"191\", \"163\": \"99\", \"164\": \"198\", \"165\": \"145\", \"166\": \"63\", \"167\": \"126\", \"168\": \"252\", \"169\": \"229\",\n        \"170\": \"215\", \"171\": \"179\", \"172\": \"123\", \"173\": \"246\", \"174\": \"241\", \"175\": \"255\", \"176\": \"227\", \"177\": \"219\", \"178\": \"171\", \"179\": \"75\",\n        \"180\": \"150\", \"181\": \"49\", \"182\": \"98\", \"183\": \"196\", \"184\": \"149\", \"185\": \"55\", \"186\": \"110\", \"187\": \"220\", \"188\": \"165\", \"189\": \"87\",\n        \"190\": \"174\", \"191\": \"65\", \"192\": \"130\", \"193\": \"25\", \"194\": \"50\", \"195\": \"100\", \"196\": \"200\", \"197\": \"141\", \"198\": \"7\", \"199\": \"14\",\n        \"200\": \"28\", \"201\": \"56\", \"202\": \"112\", \"203\": \"224\", \"204\": \"221\", \"205\": \"167\", \"206\": \"83\", \"207\": \"166\", \"208\": \"81\", \"209\": \"162\",\n        \"210\": \"89\", \"211\": \"178\", \"212\": \"121\", \"213\": \"242\", \"214\": \"249\", \"215\": \"239\", \"216\": \"195\", \"217\": \"155\", \"218\": \"43\", \"219\": \"86\",\n        \"220\": \"172\", \"221\": \"69\", \"222\": \"138\", \"223\": \"9\", \"224\": \"18\", \"225\": \"36\", \"226\": \"72\", \"227\": \"144\", \"228\": \"61\", \"229\": \"122\",\n        \"230\": \"244\", \"231\": \"245\", \"232\": \"247\", \"233\": \"243\", \"234\": \"251\", \"235\": \"235\", \"236\": \"203\", \"237\": \"139\", \"238\": \"11\", \"239\": \"22\",\n        \"240\": \"44\", \"241\": \"88\", \"242\": \"176\", \"243\": \"125\", \"244\": \"250\", \"245\": \"233\", \"246\": \"207\", \"247\": \"131\", \"248\": \"27\", \"249\": \"54\",\n        \"250\": \"108\", \"251\": \"216\", \"252\": \"173\", \"253\": \"71\", \"254\": \"142\", \"255\": \"1\",\n    };\n    var result;\n    if (reversed === true) {\n        var reversed_1 = Object.entries(data).map(function (_a) {\n            var key = _a[0], value = _a[1];\n            return [value, key];\n        });\n        var reversedData = Object.fromEntries(reversed_1);\n        result = reversedData[value];\n    }\n    else {\n        result = data[value];\n    }\n    return Number(result);\n}\nfunction getPolynomials(correctionBytesAmount) {\n    var data = {\n        \"7\": [87, 229, 146, 149, 238, 102, 21],\n        \"10\": [251, 67, 46, 61, 118, 70, 64, 94, 32, 45],\n        \"13\": [74, 152, 176, 100, 86, 100, 106, 104, 130, 218, 206, 140, 78],\n        \"15\": [8, 183, 61, 91, 202, 37, 51, 58, 58, 237, 140, 124, 5, 99, 105],\n        \"16\": [120, 104, 107, 109, 102, 161, 76, 3, 91, 191, 147, 169, 182, 194, 225, 120],\n        \"17\": [43, 139, 206, 78, 43, 239, 123, 206, 214, 147, 24, 99, 150, 39, 243, 163, 136],\n        \"18\": [215, 234, 158, 94, 184, 97, 118, 170, 79, 187, 152, 148, 252, 179, 5, 98, 96, 153],\n        \"20\": [17, 60, 79, 50, 61, 163, 26, 187, 202, 180, 221, 225, 83, 239, 156, 164, 212, 212, 188, 190],\n        \"22\": [210, 171, 247, 242, 93, 230, 14, 109, 221, 53, 200, 74, 8, 172, 98, 80, 219, 134, 160, 105, 165, 231],\n        \"24\": [229, 121, 135, 48, 211, 117, 251, 126, 159, 180, 169, 152, 192, 226, 228, 218, 111, 0, 117, 232, 87, 96, 227, 21],\n        \"26\": [173, 125, 158, 2, 103, 182, 118, 17, 145, 201, 111, 28, 165, 53, 161, 21, 245, 142, 13, 102, 48, 227, 153, 145, 218, 70],\n        \"28\": [168, 223, 200, 104, 224, 234, 108, 180, 110, 190, 195, 147, 205, 27, 232, 201, 21, 43, 245, 87, 42, 195, 212, 119, 242, 37, 9, 123],\n        \"30\": [41, 173, 145, 152, 216, 31, 179, 182, 50, 48, 110, 86, 239, 96, 222, 125, 42, 173, 226, 193, 224, 130, 156, 37, 251, 216, 238, 40, 192, 180],\n    };\n    return data[correctionBytesAmount];\n}\nexports.getPolynomials = getPolynomials;\n/**\n * Return amount of blocks, that depends at correction level and version number.\n * @param correction level\n * @param versionNumber\n * @returns\n */\nfunction getCorrectionBytesAmount(correction, versionNumber) {\n    var data = {\n        L: [\n            7, 10, 15, 20, 26, 18, 20, 24,\n            30, 18, 20, 24, 26, 30, 22, 24,\n            28, 30, 28, 28, 28, 28, 30, 30,\n            26, 28, 30, 30, 30, 30, 30, 30,\n            30, 30, 30, 30, 30, 30, 30, 30\n        ],\n        M: [\n            10, 16, 26, 18, 24, 16, 18, 22,\n            22, 26, 30, 22, 22, 24, 24, 28,\n            28, 26, 26, 26, 26, 28, 28, 28,\n            28, 28, 28, 28, 28, 28, 28, 28,\n            28, 28, 28, 28, 28, 28, 28, 28\n        ],\n        Q: [\n            13, 22, 18, 26, 18, 24, 18, 22,\n            20, 24, 28, 26, 24, 20, 30, 24,\n            28, 28, 26, 30, 28, 30, 30, 30,\n            30, 28, 30, 30, 30, 30, 30, 30,\n            30, 30, 30, 30, 30, 30, 30, 30\n        ],\n        H: [\n            17, 28, 22, 16, 22, 28, 26, 26,\n            24, 28, 24, 28, 22, 24, 24, 30,\n            28, 28, 26, 28, 30, 24, 30, 30,\n            30, 30, 30, 30, 30, 30, 30, 30,\n            30, 30, 30, 30, 30, 30, 30, 30,\n        ],\n    };\n    // index = version - 1\n    return data[correction][versionNumber - 1];\n}\nexports.getCorrectionBytesAmount = getCorrectionBytesAmount;\n/**\n * Returns corretin bytes array for all blocs.\n * @param dataObject qr data object\n * @returns ready corrcetion bytes array\n */\nfunction calculateCorrectionBytes(dataObject) {\n    // copy blocks and convert to dec 0-255 int\n    var blocks = __spreadArray([], dataObject.blocks, true).map(function (block) {\n        return block.map(function (byte) { return parseInt(String(byte), 2); });\n    });\n    // get correction bytes amount depends on correction level and version number\n    var correctionBytesAmount = getCorrectionBytesAmount(dataObject.correction, dataObject.version.number);\n    // Reed–Solomon`s methods polynomials\n    var polynomials = getPolynomials(correctionBytesAmount);\n    // store correction bytes per block\n    var allCorrectionBytes = [];\n    blocks.forEach(function (block) {\n        // get bytes amount from current block\n        var bytes = block.length;\n        // get max of two values\n        var max = Math.max(bytes, correctionBytesAmount);\n        // helper array\n        var buffer = [];\n        // single block bytes stream\n        var blockCorrectionBytes = [];\n        // fill buffer\n        for (var b = 0; b < max; b++) {\n            buffer[b] = block[b] ? block[b] : 0;\n        }\n        // \n        for (var i = 0; i < block.length; i++) {\n            // get first item\n            var a = buffer.shift();\n            if (a !== 0) {\n                // get reversed Glois Field value\n                var b = getGaloisFieldValue(String(a), true);\n                // copy original polynomials\n                var modPoly = __spreadArray([], polynomials, true);\n                for (var j = 0; j < modPoly.length; j++) {\n                    var p = modPoly[j];\n                    var v = p + b > 254 ? (p + b) % 255 : p + b;\n                    v = getGaloisFieldValue(String(v));\n                    // XOR\n                    buffer[j] = buffer[j] ^ v;\n                    blockCorrectionBytes[j] = (0, helper_1.decimalToBinary)(buffer[j], 8);\n                }\n            }\n        }\n        allCorrectionBytes.push(blockCorrectionBytes);\n    });\n    return allCorrectionBytes;\n}\nexports.calculateCorrectionBytes = calculateCorrectionBytes;\n/**\n * Modifies and returns data object with stream, that has new order and contains correction bytes.\n * @param dataObject\n * @returns modified data object with new array of stream\n */\nfunction addCorrectionBytes(dataObject) {\n    // calculate correction bytes\n    var correctionBytes = calculateCorrectionBytes(dataObject);\n    // copy blocks\n    var blocks = __spreadArray([], dataObject.blocks, true);\n    // make blocks and correction bytes flatted\n    var flattedBytes = (0, helper_1.verticalFlatten)(blocks);\n    var flattedCorrectionBytes = (0, helper_1.verticalFlatten)(correctionBytes);\n    var newStream = flattedBytes.concat(flattedCorrectionBytes).join('');\n    dataObject.stream = newStream;\n    return dataObject;\n}\nexports.addCorrectionBytes = addCorrectionBytes;\n\n\n//# sourceURL=webpack:///./src/ts/qr-core/corrector.ts?");

/***/ }),

/***/ "./src/ts/qr-core/encoder.ts":
/*!***********************************!*\
  !*** ./src/ts/qr-core/encoder.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.encodeStringToBinaryBytes = exports.convertAllItemsToCodes = exports.groupLettersByTwo = void 0;\nvar helper_1 = __webpack_require__(/*! ../helper */ \"./src/ts/helper.ts\");\n/**\n * Returns code of single letter.\n * @param letter target letter\n * @returns number code (0-44)\n */\nfunction getLetterCode(letter) {\n    var codes = {\n        \"0\": 0,\n        \"1\": 1,\n        \"2\": 2,\n        \"3\": 3,\n        \"4\": 4,\n        \"5\": 5,\n        \"6\": 6,\n        \"7\": 7,\n        \"8\": 8,\n        \"9\": 9,\n        \"A\": 10,\n        \"B\": 11,\n        \"C\": 12,\n        \"D\": 13,\n        \"E\": 14,\n        \"F\": 15,\n        \"G\": 16,\n        \"H\": 17,\n        \"I\": 18,\n        \"J\": 19,\n        \"K\": 20,\n        \"L\": 21,\n        \"M\": 22,\n        \"N\": 23,\n        \"O\": 24,\n        \"P\": 25,\n        \"Q\": 26,\n        \"R\": 27,\n        \"S\": 28,\n        \"T\": 29,\n        \"U\": 30,\n        \"V\": 31,\n        \"W\": 32,\n        \"X\": 33,\n        \"Y\": 34,\n        \"Z\": 35,\n        \" \": 36,\n        \"$\": 37,\n        \"%\": 38,\n        \"*\": 39,\n        \"+\": 40,\n        \"-\": 41,\n        \".\": 42,\n        \"/\": 43,\n        \":\": 44\n    };\n    return codes[letter];\n}\n/**\n * Groups letters at string to pairs.\n * @param string target\n * @returns\n */\nfunction groupLettersByTwo(string) {\n    return string.match(/.{1,2}/g);\n}\nexports.groupLettersByTwo = groupLettersByTwo;\n/**\n * Convert all pair of letters to pair of codes.\n * @param groups\n * @returns\n */\nfunction convertAllItemsToCodes(groups) {\n    return groups.map(function (group) {\n        return group.length < 2\n            ? [getLetterCode(group[0])]\n            : [getLetterCode(group[0]), getLetterCode(group[1])];\n    });\n}\nexports.convertAllItemsToCodes = convertAllItemsToCodes;\n/**\n * Turns pair of letters to binary value.\n * @param pairs\n * @returns\n */\nfunction pairsToBinary(pairs) {\n    var binaries = pairs.map(function (pair) {\n        return pair.length < 2\n            ? (0, helper_1.decimalToBinary)(pair[0], 6)\n            : (0, helper_1.decimalToBinary)(pair[0] * 45 + pair[1], 11);\n    });\n    return binaries;\n}\n/**\n * Encode given string to binary line value.\n * @param string target\n * @returns binary value (string)\n */\nfunction encodeStringToBinaryBytes(string) {\n    var sanitized = (0, helper_1.sanitizeInput)(string);\n    var grouped = groupLettersByTwo(sanitized);\n    var converted = convertAllItemsToCodes(grouped);\n    var binaries = pairsToBinary(converted);\n    return binaries.join('');\n}\nexports.encodeStringToBinaryBytes = encodeStringToBinaryBytes;\n\n\n//# sourceURL=webpack:///./src/ts/qr-core/encoder.ts?");

/***/ }),

/***/ "./src/ts/qr-core/qr.ts":
/*!******************************!*\
  !*** ./src/ts/qr-core/qr.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.qr = exports.prepareData = void 0;\nvar encoder_1 = __webpack_require__(/*! ./encoder */ \"./src/ts/qr-core/encoder.ts\");\nvar serviceData_1 = __webpack_require__(/*! ./serviceData */ \"./src/ts/qr-core/serviceData.ts\");\nvar structurer_1 = __webpack_require__(/*! ./structurer */ \"./src/ts/qr-core/structurer.ts\");\nvar corrector_1 = __webpack_require__(/*! ./corrector */ \"./src/ts/qr-core/corrector.ts\");\nvar renderer_1 = __webpack_require__(/*! ./renderer */ \"./src/ts/qr-core/renderer.ts\");\n/**\n * Prepares input data to working format.\n * @param text target data (string, number to encode)\n * @param correction encoding correction level\n * @returns\n */\nfunction prepareData(text, correction) {\n    var encodedString = (0, encoder_1.encodeStringToBinaryBytes)(text);\n    var serviceData = (0, serviceData_1.getServiceData)(encodedString.length, correction);\n    var totalLength = serviceData.serviceData.length + encodedString.length;\n    // check multiplicity 8\n    if (totalLength % 8 > 0) {\n        var shortage = (Math.ceil(totalLength / 8) * 8) - totalLength;\n        // add extra zero data\n        encodedString += '0'.repeat(shortage);\n        totalLength = serviceData.serviceData.length + encodedString.length;\n    }\n    if (totalLength > serviceData.version.capacity) {\n        serviceData = (0, serviceData_1.getServiceData)(totalLength, correction);\n    }\n    // fill bit stream to full capacity\n    for (var i = 0, j = 0; i < serviceData.version.capacity - totalLength; i += 8, j++) {\n        if (j % 2 > 0) {\n            encodedString += '00010001';\n        }\n        else {\n            encodedString += '11101100';\n        }\n    }\n    return {\n        correction: correction,\n        version: serviceData.version,\n        stream: serviceData.serviceData + encodedString,\n        originalData: text,\n        serviceData: serviceData.serviceData,\n        encodedData: encodedString\n    };\n}\nexports.prepareData = prepareData;\nfunction qr(params) {\n    params.dev = params.dev || {\n        state: false,\n    };\n    if (params.text || params.textOrigin) {\n        // params.textOrigin has more priority than params.text\n        var text = params.textOrigin && params.textOrigin.value || params.text;\n        params.correction = params.correction || 'M';\n        params.size = params.size || 400;\n        var data = prepareData(text, params.correction);\n        var groupedData = (0, structurer_1.divideIntoBlocks)(data);\n        var readyData = (0, corrector_1.addCorrectionBytes)(groupedData);\n        readyData.dev = params.dev;\n        var canvas = document.createElement('canvas');\n        canvas.width = params.size;\n        canvas.height = params.size;\n        if (canvas && canvas.getContext('2d'))\n            (0, renderer_1.drawQR)(canvas, readyData);\n        return {\n            canvas: canvas,\n            data: readyData\n        };\n    }\n    else {\n        throw new TypeError('qr(text?: string, textOrigin?:HTMLInputElement...): at least one text source must be passed to function');\n    }\n}\nexports.qr = qr;\n\n\n//# sourceURL=webpack:///./src/ts/qr-core/qr.ts?");

/***/ }),

/***/ "./src/ts/qr-core/renderer.ts":
/*!************************************!*\
  !*** ./src/ts/qr-core/renderer.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.drawQR = exports.getModulesAmount = exports.getCorrectionMaskData = exports.getVersionData = exports.getAligmentPatternsPos = void 0;\nvar dev_1 = __webpack_require__(/*! ../dev */ \"./src/ts/dev.ts\");\nvar helper_1 = __webpack_require__(/*! ../helper */ \"./src/ts/helper.ts\");\nvar DEV_MODE = (0, dev_1.getDefaultDevParams)();\n/**\n * Fills background with selected color\n * @param context canvas 2d context\n * @param color fill color. By default - white\n */\nfunction fillBackground(context, color) {\n    context.fillStyle = color || 'white';\n    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n}\n/**\n * Returns aligment anchor positions.\n * @param versionNumber\n * @returns\n */\nfunction getAligmentPatternsPos(versionNumber) {\n    var data = [\n        [0], [18], [22], [26], [30], [34], [6, 22, 38], [6, 24, 42],\n        [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62],\n        [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82],\n        [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102],\n        [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122],\n        [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138],\n        [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154],\n        [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170],\n    ];\n    return data[versionNumber - 1];\n}\nexports.getAligmentPatternsPos = getAligmentPatternsPos;\nfunction getVersionData(versionNumber) {\n    var data = [\n        \"0\", \"0\", \"0\", \"0\", \"0\", \"0\",\n        \"000010011110100110\", \"010001011100111000\",\n        \"110111011000000100\", \"101001111110000000\", \"001111111010111100\",\n        \"001101100100011010\", \"101011100000100110\", \"110101000110100010\", \"010011000010011110\",\n        \"011100010001011100\", \"111010010101100000\", \"100100110011100100\", \"000010110111011000\", \"000000101001111110\",\n        \"100110101101000010\", \"111000001011000110\", \"011110001111111010\", \"001101001101100100\", \"101011001001011000\", \"110101101111011100\",\n        \"010011101011100000\", \"010001110101000110\", \"110111110001111010\", \"101001010111111110\", \"001111010011000010\", \"101000011000101101\", \"001110011100010001\",\n        \"010000111010010101\", \"110110111110101001\", \"110100100000001111\", \"010010100100110011\", \"001100000010110111\", \"101010000110001011\", \"111001000100010101\"\n    ];\n    return data[versionNumber - 1];\n}\nexports.getVersionData = getVersionData;\nfunction getCorrectionMaskData(correction, mask) {\n    mask = mask || 1;\n    var data = {\n        L: [\n            \"111011111000100\", \"111001011110011\", \"111110110101010\", \"111100010011101\",\n            \"110011000101111\", \"110001100011000\", \"110110001000001\", \"110100101110110\"\n        ],\n        M: [\n            \"101010000010010\", \"101000100100101\", \"101111001111100\", \"101101101001011\",\n            \"100010111111001\", \"100000011001110\", \"100111110010111\", \"100101010100000\"\n        ],\n        Q: [\n            \"011010101011111\", \"011000001101000\", \"011111100110001\", \"011101000000110\",\n            \"010010010110100\", \"010000110000011\", \"010111011011010\", \"010101111101101\",\n        ],\n        H: [\n            \"001011010001001\", \"001001110111110\", \"001110011100111\", \"001100111010000\",\n            \"000011101100010\", \"000001001010101\", \"000110100001100\", \"000100000111011\"\n        ],\n    };\n    return data[correction][mask - 1];\n}\nexports.getCorrectionMaskData = getCorrectionMaskData;\n/**\n * Returns qr code module size.\n * @param versionNumber\n * @returns\n */\nfunction getModulesAmount(versionNumber) {\n    var aligmenAnchorPos = getAligmentPatternsPos(versionNumber);\n    // + 8: 4 modules width for each side - white space around qr code!\n    return (aligmenAnchorPos[0] === 0\n        ? 21 : aligmenAnchorPos[aligmenAnchorPos.length - 1] + 7) + 8;\n}\nexports.getModulesAmount = getModulesAmount;\n/**\n * Draw single module (1x1).\n * @param context canvas context\n * @param x coord\n * @param y coord\n * @param size of module\n * @param color of module (dafault value - black)\n */\nfunction drawModule(context, x, y, size, color) {\n    color = color || 'black';\n    context.fillStyle = color;\n    context.fillRect(x, y, size, size);\n}\n/**\n * Returns bounding rectangle points.\n * @param context canvas context\n * @param size of module\n * @returns\n */\nfunction getBoundingRect(context, size) {\n    var w = context.canvas.width;\n    var h = context.canvas.height;\n    var offset = size * 4;\n    return {\n        leftTop: [0 + offset, 0 + offset],\n        rightTop: [w - offset - size, 0 + offset],\n        leftBottom: [0 + offset, h - offset - size],\n        rightBottom: [w - offset - size, h - offset - size],\n    };\n}\n/**\n * Draws three finder patterns.\n * @param context canvas 2d context\n * @param size of module\n */\nfunction drawFinderPatterns(context, size) {\n    var rect = getBoundingRect(context, size);\n    for (var i = 0; i <= 7; i++) {\n        for (var j = 0; j <= 7; j++) {\n            var color = 'white';\n            var isHorizontalsBlackLine = (j == 0 || j == 6) && (i >= 0 && i <= 6);\n            var isVerticalsBlackLine = (i == 0 || i == 6) && (j >= 0 && j <= 6);\n            var isCenterBlackSquare = (i >= 2 && i <= 4) && (j >= 2 && j <= 4);\n            // compose all conditions\n            var isBlackLine = isHorizontalsBlackLine || isVerticalsBlackLine || isCenterBlackSquare;\n            if (isBlackLine) {\n                color = 'black';\n            }\n            else {\n                color = 'white';\n            }\n            // top left pattern\n            drawModule(context, rect.leftTop[0] + i * size, rect.leftTop[1] + j * size, size, color);\n            // top right pattern\n            drawModule(context, rect.rightTop[0] - i * size, rect.rightTop[1] + j * size, size, color);\n            // left bottom pattern\n            drawModule(context, rect.leftBottom[0] + i * size, rect.leftBottom[1] - j * size, size, color);\n        }\n    }\n}\n/**\n * Draws timing pattern.\n * @param context canvas 2d context\n * @param size of module\n */\nfunction drawTimingPatterns(context, size) {\n    var rect = getBoundingRect(context, size);\n    var verticalLineStartPos = [rect.leftTop[0] + size * 6, rect.leftTop[1] + size * 7];\n    var verticalLineEndPos = [rect.leftBottom[0] + size * 6, rect.leftBottom[1] - size * 7];\n    var verticalDistance = verticalLineEndPos[1] - verticalLineStartPos[1];\n    for (var i = 0; i <= (verticalDistance / size); i++) {\n        var color = i % 2 ? 'black' : 'white';\n        drawModule(context, verticalLineEndPos[0], verticalLineStartPos[1] + i * size, size, color);\n        // Technically we can just change x ant y to get horizontal timing line!\n        drawModule(context, verticalLineStartPos[1] + i * size, verticalLineEndPos[0], size, color);\n    }\n}\n/**\n * Draws alignment patterns (starting 7th version).\n * @param context canvas 2d context\n * @param size of module\n * @param version of qr\n */\nfunction drawAligmentPatterns(context, size, version) {\n    var rect = getBoundingRect(context, size);\n    var aligmentPatternsPos = (0, helper_1.getAllArrayCombinations)(getAligmentPatternsPos(version));\n    // Starting 7th version qr shoud contain aligment patterns.\n    if (version > 6) {\n        // Remove all alignment patterns near finder patterns\n        var potentialTargets = aligmentPatternsPos.filter(function (item) { return item[0] == 6; });\n        var lastItem = potentialTargets[potentialTargets.length - 1];\n        var reversedLastItem = lastItem.reverse();\n        var firstTargetIndex = (0, helper_1.nestedArrayIndexOf)(aligmentPatternsPos, potentialTargets[0]);\n        aligmentPatternsPos.splice(firstTargetIndex, 1);\n        var secondTargetIndex = (0, helper_1.nestedArrayIndexOf)(aligmentPatternsPos, lastItem);\n        aligmentPatternsPos.splice(secondTargetIndex, 1);\n        var thirdTargetIndex = (0, helper_1.nestedArrayIndexOf)(aligmentPatternsPos, reversedLastItem);\n        aligmentPatternsPos.splice(thirdTargetIndex, 1);\n    }\n    aligmentPatternsPos.forEach(function (position, p) {\n        // centrize\n        position = [position[0] - 2, position[1] - 2];\n        for (var i = 0; i <= 4; i++) {\n            for (var j = 0; j <= 4; j++) {\n                var color = 'white';\n                var isHorizontalsBlackLine = (j == 0 || j == 4) && (i >= 0 && i <= 4);\n                var isVerticalsBlackLine = (i == 0 || i == 4) && (j >= 0 && j <= 4);\n                var isCenterBlackSquare = (i == 2 && j == 2);\n                // compose all conditions\n                var isBlackLine = isHorizontalsBlackLine || isVerticalsBlackLine || isCenterBlackSquare;\n                if (isBlackLine) {\n                    color = 'black';\n                }\n                else {\n                    color = 'white';\n                }\n                drawModule(context, rect.leftTop[0] + (position[0] * size) + i * size, rect.leftTop[1] + (position[1] * size) + j * size, size, color);\n            }\n        }\n    });\n}\n/**\n * Draws version number data blocks.\n * @param context canvas 2d context\n * @param size of module\n * @param version  of qr\n */\nfunction drawVersionCodes(context, size, version) {\n    var versionData = getVersionData(version);\n    var rect = getBoundingRect(context, size);\n    var codeStartPos = [rect.leftBottom[0], rect.leftBottom[1] - 10 * size];\n    if (versionData !== \"0\") {\n        var bits = versionData.match(/.{1,6}/g);\n        for (var i = 0; i <= bits.length; i++) {\n            if (bits[i]) {\n                for (var j = 0; j < bits[i].length; j++) {\n                    var color = bits[i][j] == \"1\" ? \"black\" : \"white\";\n                    drawModule(context, codeStartPos[0] + j * size, codeStartPos[1] + i * size, size, color);\n                    // Technically we can just change x ant y to draw other version code marker!\n                    drawModule(context, codeStartPos[1] + i * size, codeStartPos[0] + j * size, size, color);\n                }\n            }\n        }\n    }\n}\n/**\n * Draws correction level info and mask code to qr code service data region.\n * @param context canvas 2d context\n * @param size of module\n * @param correction level\n * @param mask qr code encoding data mask\n */\nfunction drawCorrectionLevelAndMaskDataCodes(context, size, correction, mask) {\n    var rect = getBoundingRect(context, size);\n    var correctionAndMaskData = getCorrectionMaskData(correction, mask);\n    var dataArray = [correctionAndMaskData.slice(0, 7), correctionAndMaskData.slice(7, 15).split('').reverse().join('')];\n    var bottomLeftStartPos = [rect.leftBottom[0] + 8 * size, rect.leftBottom[1]];\n    var topLeftHorizontalStartPos = [rect.leftTop[0], rect.leftTop[1] + 8 * size];\n    var topLeftVericalStartPos = [rect.leftTop[0] + 8 * size, rect.leftTop[1]];\n    var topRightStartPos = [rect.rightTop[0], rect.rightTop[1] + 8 * size];\n    for (var i = 0; i < dataArray[0].length; i++) {\n        drawModule(context, bottomLeftStartPos[0], bottomLeftStartPos[1] - i * size, size, dataArray[0][i] === \"1\" ? \"black\" : \"white\");\n        drawModule(context, topLeftHorizontalStartPos[0] + (i == 6 ? 7 : i) * size, topLeftHorizontalStartPos[1], size, dataArray[0][i] === \"1\" ? \"black\" : \"white\");\n    }\n    for (var j = 0; j < dataArray[1].length; j++) {\n        drawModule(context, topRightStartPos[0] - j * size, topRightStartPos[1], size, dataArray[1][j] === \"1\" ? \"black\" : \"white\");\n        drawModule(context, topLeftVericalStartPos[0], topLeftVericalStartPos[1] + (j >= 6 ? j + 1 : j) * size, size, dataArray[1][j] === \"1\" ? \"black\" : \"white\");\n    }\n    var color = DEV_MODE.state === true ? \"red\" : \"black\";\n    drawModule(context, bottomLeftStartPos[0], bottomLeftStartPos[1] - 7 * size, size, color);\n}\n/**\n * Render all bits from stream to qr code encoding region.\n * @param context canvas 2d context\n * @param size of module\n * @param stream of data\n */\nfunction renderStream(context, size, stream) {\n    var rect = getBoundingRect(context, size);\n    // width and height in modules\n    var width = Math.floor(context.canvas.width / size);\n    var height = Math.floor(context.canvas.height / size);\n    //[(width - 5), (height - 5), 1]\n    var freeModules = [];\n    // d here - direction of data (bottom up or top down)\n    // all encoding region groups to columns by 2 modules\n    for (var i = 0, d = 0; i <= width; i++, d++) {\n        // only 4 variants: 0, 1, 2, 3\n        // 0, 1 - bottom up\n        // 2, 3 - top down\n        // if d > 3 (3 - max value) - reset d to zero\n        if (d > 3)\n            d = 0;\n        for (var j = 0; j <= height; j++) {\n            // d cant be lower than zero!\n            if (d < 0)\n                d = 0;\n            // temp\n            var color = d == 1 || d == 2 ? { bright: '#943126', pale: '#F1948A' } : { bright: '#21618C', pale: '#85C1E9' };\n            var x = context.canvas.width - i * size;\n            var y = context.canvas.height - j * size;\n            // region excluding:\n            // is module inside bounding rect\n            var insideRect = (x >= rect.leftTop[0] && x <= rect.rightTop[0])\n                && (y >= rect.leftTop[1] && y <= rect.leftBottom[1]);\n            // is module inside finder patterns\n            var rightCorner = (x >= rect.rightTop[0] - size * 7) && (y <= rect.rightTop[1] + size * 7);\n            var leftTopCorner = (x <= rect.leftTop[0] + size * 7) && (y <= rect.leftTop[1] + size * 7);\n            var leftBottomCorner = (x <= rect.leftBottom[0] + size * 7) && (y >= rect.leftBottom[1] - size * 7);\n            // is module inside sunc patterns\n            var isVericalSyncPattern = i == width - 10;\n            var isHorizontalSyncPattern = j == height - 10;\n            // region exluding\n            var isNotOnPatterns = !rightCorner && !leftTopCorner && !leftBottomCorner && !isVericalSyncPattern\n                && !isHorizontalSyncPattern;\n            // if vertical sync line - move all left columns to left by 1 module \n            if (isVericalSyncPattern === true) {\n                d = 2;\n                // color = 'red';\n                // console.log(isVericalSyncPattern, i)\n            }\n            // draw module only result encoding region\n            if (insideRect && isNotOnPatterns) {\n                var direction = d == 1 || d == 2 ? 1 : -1;\n                // let last_x = freeModules[freeModules.length - 1][0];\n                // let last_y = freeModules[freeModules.length - 1][1];\n                // let module_x = i % 2 === 0 ? last_x + (-1) : last_x + 1;\n                // let module_y = i % 2 === 0 ? last_y : last_y + (-1);\n                // drawModule(context, x, y, size, color);\n                var a = {\n                    x: Math.round(x / size),\n                    y: Math.round(y / size),\n                    direction: (d == 1 || d == 2 ? 1 : -1),\n                    columnColor: color\n                };\n                freeModules.push(a);\n            }\n            else {\n                if (DEV_MODE.state === true && DEV_MODE.queitRegion === true) {\n                    drawModule(context, x, y, size, '#ABB2B9');\n                }\n            }\n        }\n        // freeModules.forEach((module, i) => {\n        //     let direction = module[2];\n        //     drawModule(context, module[0]*size, module[1]*size, size, stream[i] == \"1\" ? 'black' : 'white');\n        // });\n    }\n    var columns = [];\n    var startValue = freeModules[0].x;\n    var copy = __spreadArray([], freeModules, true);\n    for (var p = 0; p <= copy.length; p++) {\n        var start = copy.findIndex(function (item) { return item.x == startValue; });\n        var end = copy.findIndex(function (item) { return item.x == startValue - 2; });\n        if (start > -1 && end > -1) {\n            var part = copy.slice(start, end);\n            var part_a = part.slice(0, part.length / 2);\n            var part_b = part.slice(part.length / 2);\n            var shuffled = [];\n            console.log(part_a, part_b, part.length / 2);\n            for (var s = 0; s <= part_a.length; s++) {\n                if (part_a && part_a[s]) {\n                    // console.log(part_a[s][2]);\n                    if (part_a[s].direction == 1) {\n                        shuffled.push(part_a[s]);\n                        shuffled.push(part_b[s]);\n                    }\n                    else {\n                        shuffled.push(part_b[s]);\n                        shuffled.push(part_a[s]);\n                    }\n                }\n            }\n            if (shuffled[0].direction == -1)\n                shuffled = shuffled.reverse();\n            columns.push(shuffled);\n        }\n        else {\n            // console.log(end);\n        }\n        startValue = startValue - 2;\n    }\n    var order = columns.flat(1);\n    order.forEach(function (module, i) {\n        if (module) {\n            if (DEV_MODE.state === true && DEV_MODE.encodedDataDirectionColumns === true) {\n                drawModule(context, module.x * size, module.y * size, size, stream[i] == \"1\" ? module.columnColor.bright : module.columnColor.pale);\n            }\n            else {\n                drawModule(context, module.x * size, module.y * size, size, stream[i] == \"1\" ? \"black\" : \"white\");\n            }\n        }\n    });\n    // columns[0].forEach((module, i) => {\n    //     if(module !== undefined) {\n    //         drawModule(context, module[0]*size, module[1]*size, size, stream[i] == \"1\" ? 'black' : 'white');\n    //     }\n    // });\n    // columns[1].forEach((module, i) => {\n    //     if(module !== undefined) {\n    //         drawModule(context, module[0]*size, module[1]*size, size, stream[i] == \"1\" ? 'black' : 'white');\n    //     }\n    // });\n    // console.log(columns, freeModules);\n}\nfunction drawQR(canvas, data) {\n    var context = canvas.getContext('2d');\n    var modulesAmount = getModulesAmount(data.version.number);\n    var moduleSize = canvas.width / modulesAmount;\n    DEV_MODE = data.dev;\n    fillBackground(context);\n    if (DEV_MODE.state === true) {\n        renderStream(context, moduleSize, data.stream);\n        if (DEV_MODE.finderPatterns === true)\n            drawFinderPatterns(context, moduleSize);\n        if (DEV_MODE.aligmentPatterns === true)\n            drawAligmentPatterns(context, moduleSize, data.version.number);\n        if (DEV_MODE.versionCodes === true)\n            drawVersionCodes(context, moduleSize, data.version.number);\n        if (DEV_MODE.correctionLevelAndMaskCodes === true)\n            drawCorrectionLevelAndMaskDataCodes(context, moduleSize, data.correction);\n        if (DEV_MODE.timingPatterns === true)\n            drawTimingPatterns(context, moduleSize);\n        if (DEV_MODE.boundingRectCorners) {\n            var rect = getBoundingRect(context, moduleSize);\n            drawModule(context, rect.leftTop[0], rect.leftTop[1], moduleSize, 'green');\n            drawModule(context, rect.leftBottom[0], rect.leftBottom[1], moduleSize, 'green');\n            drawModule(context, rect.rightBottom[0], rect.rightBottom[1], moduleSize, 'green');\n            drawModule(context, rect.rightTop[0], rect.rightTop[1], moduleSize, 'green');\n        }\n    }\n    else {\n        renderStream(context, moduleSize, data.stream);\n        drawFinderPatterns(context, moduleSize);\n        drawAligmentPatterns(context, moduleSize, data.version.number);\n        drawVersionCodes(context, moduleSize, data.version.number);\n        drawCorrectionLevelAndMaskDataCodes(context, moduleSize, data.correction);\n        drawTimingPatterns(context, moduleSize);\n    }\n}\nexports.drawQR = drawQR;\n\n\n//# sourceURL=webpack:///./src/ts/qr-core/renderer.ts?");

/***/ }),

/***/ "./src/ts/qr-core/serviceData.ts":
/*!***************************************!*\
  !*** ./src/ts/qr-core/serviceData.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getServiceData = exports.getOptimalQRCodeVersion = exports.choseVersion = void 0;\nvar helper_1 = __webpack_require__(/*! ../helper */ \"./src/ts/helper.ts\");\n/**\n * Get code version that can contains bit flow.\n * @param bitsArray correction array\n * @param bitStreamSize bit stream length\n * @returns object {number: version number, capacity: version capacity}\n */\nfunction choseVersion(bitsArray, bitStreamSize) {\n    var filtred = bitsArray.filter(function (bits) { return bitStreamSize <= bits; });\n    var optimal = bitsArray.indexOf(filtred[0]);\n    return {\n        // version number stored at array index, therefore version = index + 1\n        number: optimal + 1,\n        // optimal capacity value is nearest version capacity at filtered array\n        capacity: filtred[0],\n    };\n}\nexports.choseVersion = choseVersion;\n/**\n * Returns optimal code version using correction level and bit flow length\n * @param correction level L M Q H\n * @param bitStreamSize bit stream length\n * @returns code version\n */\nfunction getOptimalQRCodeVersion(bitStreamSize, correction) {\n    var data = {\n        /**\n         * QR code capacity level\n         * depends at QR_VERSION\n         * QR code level saved at index starting from zero (level = index + 1)\n         * CORRECTION_LEVEL : [QR_VERSION_1, QR_VERSION_N+1...40]\n         */\n        L: [\n            152, 272, 440, 640, 864, 1088, 1248, 1552, 1856, 2192,\n            2592, 2960, 3424, 3688, 4184, 4712, 5176, 5768, 6360,\n            6888, 7456, 8048, 8752, 9392, 10208, 10960, 11744,\n            12248, 13048, 13880, 14744, 15640, 16568, 17528,\n            18448, 19472, 20528, 21616, 22496, 23648\n        ],\n        M: [\n            128, 224, 352, 512, 688, 864, 992, 1232, 1456, 1728,\n            2032, 2320, 2672, 2920, 3320, 3624, 4056, 4504,\n            5016, 5352, 5712, 6256, 6880, 7312, 8000,\n            8496, 9024, 9544, 10136, 10984, 11640,\n            12328, 13048, 13800, 14496, 15312,\n            15936, 16816, 17728, 18672\n        ],\n        Q: [\n            104, 176, 272, 384, 496, 608, 704, 880, 1056, 1232,\n            1440, 1648, 1952, 2088, 2360, 2600, 2936, 3176,\n            3560, 3880, 4096, 4544, 4912, 5312, 5744,\n            6032, 6464, 6968, 7288, 7880, 8264,\n            8920, 9368, 9848, 10288, 10832,\n            11408, 12016, 12656, 13328\n        ],\n        H: [\n            72, 128, 208, 288, 368, 480, 528, 688, 800, 976,\n            1120, 1264, 1440, 1576, 1784, 2024, 2264, 2504,\n            2728, 3080, 3248, 3536, 3712, 4112, 4304,\n            4768, 5024, 5288, 5608, 5960, 6344,\n            6760, 7208, 7688, 7888, 8432,\n            8768, 9136, 9776, 10208\n        ],\n    };\n    var correctionLevelArray = data[correction];\n    var qrVersion = choseVersion(correctionLevelArray, bitStreamSize);\n    return qrVersion;\n}\nexports.getOptimalQRCodeVersion = getOptimalQRCodeVersion;\n/**\n * Returns object with all service data: version, capacity, service prefix bits;\n * contains encoded data, but not original data (originalData = '').\n * @param bitStreamLength encoded bits stream\n * @param correction level\n * @returns\n */\nfunction getServiceData(bitStreamLength, correction) {\n    var version = getOptimalQRCodeVersion(bitStreamLength, correction);\n    var serviceDataBitsSize = 1;\n    if (version.number >= 1 || version.number <= 9) {\n        serviceDataBitsSize = 9;\n    }\n    else if (version.number >= 10 && version.number <= 26) {\n        serviceDataBitsSize = 11;\n    }\n    else if (version.number >= 27 && version.number <= 40) {\n        serviceDataBitsSize = 13;\n    }\n    // 0010 - bits prefix for number and letters method encoding\n    var serviceData = \"0010\".concat((0, helper_1.decimalToBinary)(bitStreamLength, serviceDataBitsSize));\n    return {\n        version: version,\n        serviceData: serviceData,\n    };\n}\nexports.getServiceData = getServiceData;\n\n\n//# sourceURL=webpack:///./src/ts/qr-core/serviceData.ts?");

/***/ }),

/***/ "./src/ts/qr-core/structurer.ts":
/*!**************************************!*\
  !*** ./src/ts/qr-core/structurer.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.divideIntoBlocks = exports.getBlocksAmount = void 0;\n/**\n * Return amount of blocks, that depends at correction level and version number.\n * @param correction level\n * @param versionNumber\n * @returns\n */\nfunction getBlocksAmount(correction, versionNumber) {\n    var data = {\n        L: [\n            1, 1, 1, 1, 1, 2, 2,\n            2, 2, 4, 4, 4, 4, 4, 6,\n            6, 6, 6, 7, 8, 8, 9, 9, 10,\n            12, 12, 12, 13, 14, 15, 16,\n            17, 18, 19, 19, 20, 21, 22, 24, 25\n        ],\n        M: [\n            1, 1, 1, 2, 2, 4, 4,\n            4, 5, 5, 5, 8, 9, 9, 10,\n            10, 11, 13, 14, 16, 17, 17,\n            18, 20, 21, 23, 25, 26, 28,\n            29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49\n        ],\n        Q: [\n            1, 1, 2, 2, 4, 4, 6,\n            6, 8, 8, 8, 10, 12, 16,\n            12, 17, 16, 18, 21, 20, 23,\n            23, 25, 27, 29, 34, 34, 35,\n            38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68\n        ],\n        H: [\n            1, 1, 2, 4, 4, 4, 5,\n            6, 8, 8, 11, 11, 16, 16,\n            18, 16, 19, 21, 25, 25, 25,\n            34, 30, 32, 35, 37, 40, 42,\n            45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81\n        ],\n    };\n    // index = version - 1\n    return data[correction][versionNumber - 1];\n}\nexports.getBlocksAmount = getBlocksAmount;\n/**\n * Modifies data object, copies stream and divide it into bytes groups (blocks).\n * @param preparedData object\n * @returns modified data object\n */\nfunction divideIntoBlocks(preparedData) {\n    var streamSize = preparedData.stream.length / 8;\n    var amountOBlocks = getBlocksAmount(preparedData.correction, preparedData.version.number);\n    var blockByteSize = streamSize / amountOBlocks;\n    var block = [];\n    var blocks = [];\n    var blocksPositionIndexes = [];\n    var positionStart;\n    var positionEnd;\n    for (var i = 0; i < amountOBlocks; i++) {\n        // if not divided evenly\n        if (streamSize % amountOBlocks > 0) {\n            var overload = streamSize % amountOBlocks;\n            // last n bytes + 1 \n            // for example: 180 bytes, 8 groups, streamSize % amountOBlocks -> 22 bytes and overload 4 byte, \n            // then blocks = 22, 22, 22, 22, 23, 23, 23, 23 = gives at sum 180 \n            var byteSize = i >= amountOBlocks - overload\n                ? Math.ceil(blockByteSize)\n                : Math.floor(blockByteSize);\n            positionStart = blocksPositionIndexes.length === 0 ? 0 : blocksPositionIndexes[i - 1][1];\n            positionEnd = positionStart + byteSize;\n            blocksPositionIndexes.push([positionStart, positionEnd]);\n        }\n        else {\n            // if divided evenly - OK\n            positionStart = blockByteSize * i;\n            positionEnd = positionStart + blockByteSize;\n        }\n        var part = preparedData.stream.slice(positionStart * 8, positionEnd * 8);\n        block = part.match(/.{1,8}/g);\n        blocks.push(block);\n    }\n    preparedData.blocks = blocks;\n    return preparedData;\n}\nexports.divideIntoBlocks = divideIntoBlocks;\n\n\n//# sourceURL=webpack:///./src/ts/qr-core/structurer.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/ts/qr-core/qr.ts");
/******/ 	
/******/ })()
;